generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccessType {
  DIGITAL
  PRESENCIAL
  HYBRID
}

enum Status {
  ACTIVE
  INACTIVE
}

enum TicketSalesStatus {
  AVAILABLE
  SOLD_OUT
  PAUSED
}

enum Currency {
  BRL
  USD
  EUR
}

enum TicketStockType {
  UNLIMITED
  LIMITED
}

model Owner {
  id          String     @id @default(cuid())
  name        String
  organizerId String     @unique
  accessType  AccessType @default(DIGITAL)
  status      Status     @default(ACTIVE)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Ticket      Ticket[]

  @@map("owners")
}

model Ticket {
  id           String            @id @default(cuid())
  name         String
  description  String?
  ownerId      String
  accessType   AccessType        @default(DIGITAL)
  saleStatus   TicketSalesStatus @default(AVAILABLE)
  usedQuantity Int               @default(0)
  position     Int               @default(0)
  hidden       Boolean           @default(false)
  categoryId   String?
  status       Status            @default(ACTIVE)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  priceId      String
  stockId      String

  owner Owner       @relation(fields: [ownerId], references: [id])
  price TicketPrice @relation(fields: [priceId], references: [id])
  stock TicketStock @relation(fields: [stockId], references: [id])

  @@map("tickets")
}

model TicketPrice {
  id       String   @id @default(cuid())
  price    Int      @default(0)
  currency Currency @default(BRL)
  Ticket   Ticket[]

  @@map("ticket_prices")
}

model TicketStock {
  id        String          @id @default(cuid())
  total     Int             @default(0)
  available Int             @default(0)
  type      TicketStockType @default(UNLIMITED)
  Ticket    Ticket[]

  @@map("ticket_stocks")
}

model Cart {
  id            String         @id @default(uuid())
  ownerId       String
  status        Status         @default(ACTIVE)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  items         CartItem[]     @relation("CartItems")
  customerEmail String?
  customerName  String?
  marketingData MarketingData?

  @@map("carts")
}

model CartItem {
  id       String @id @default(uuid())
  cartId   String
  ticketId String
  price    Int    @default(0)
  discount Int    @default(0)
  quantity Int
  users    User[] @relation("ItemUsers")
  cart     Cart   @relation(fields: [cartId], references: [id], name: "CartItems")

  @@map("cart_items")
}

model User {
  id        String   @id @default(uuid())
  itemId    String
  name      String
  email     String
  infoExtra Json
  item      CartItem @relation(fields: [itemId], references: [id], name: "ItemUsers")

  @@map("cart_users")
}

model MarketingData {
  id          String  @id @default(uuid())
  cartId      String  @unique
  utmMedium   String?
  utmSource   String?
  utmCampaign String?
  utmContent  String?
  cart        Cart    @relation(fields: [cartId], references: [id])

  @@map("marketing_data")
}
